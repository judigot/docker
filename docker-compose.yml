version: "3.9"

services:
  # node.js:
  #   # image: node:alpine
  #   container_name: Node.js
  #   restart: always
  #   build:
  #     context: ./docker/node.js
  #     dockerfile: Dockerfile
  #   ports:
  #     - 3000:3000
  #     - 5000:5000
  #   volumes:
  #     - ./app/node.js:/app
  #   tty: true # Keep the container "always running". Prevent <Container> exited with code 0 error

  # Spring Boot
  # java:
  #   image: maven:3.8.5-jdk-8
  #   container_name: Java-Maven
  #   ports:
  #     - 8080:8080
  #   volumes:
  #     - ./app/java/test:/usr/local/bin
  #     - ./app/java/test/entrypoint.sh:/usr/local/bin/mvn-entrypoint.sh
  #
  #====================
  # entrypoint.sh
  # #!/bin/sh
  # You can set here anything you need before starting the spring boot application
  # cd /usr/local/bin
  # mvn install
  # mvn spring-boot:run
  #====================

  # jenkins:
  #   image: jenkinsci/jenkins:lts-alpine
  #   container_name: Jenkins
  #   restart: always
  #   ports:
  #     - 8080:8080

  # ubuntu:
  #   tty: true
  #   container_name: Ubuntu
  #   restart: always
  #   build:
  #     context: ./docker/nginx
  #     dockerfile: Dockerfile
  #   ports:
  #     - 81:81
  #     - 3000:3000
  #     - 3306:3306
  #   volumes:
  #     # Serve app folder to the server
  #     - ./app/php:/var/www/html
  #     - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./docker/php/overrides.ini:/etc/php/8.1/fpm/conf.d/overrides.ini

  # php:
  #   container_name: PHP-Apache
  #   restart: always
  #   build:
  #     context: ./docker/apache
  #     dockerfile: Dockerfile
  #   ports:
  #     - 80:80
  #   volumes:
  #     # Serve app folder to the server
  #     - ./app/php:/var/www/html/
  #     - ./docker/php/overrides.ini:/usr/local/etc/php/conf.d/overrides.ini

  mysql:
    image: mysql:latest
    container_name: MySQL
    restart: always
    ports:
      - "3306:3306"
    volumes:
      # - ./data/mysql:/var/lib/mysql
      - mysql-data:/var/lib/mysql # Linux is case sensitive, so table name cases must match!
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: "123"

  postgres:
    image: postgres:alpine
    container_name: PostgreSQL
    restart: always
    ports:
      - "5432:5432"
    volumes:
      # - ./data/postgres:/var/lib/postgresql/data
      - postgres-data:/var/lib/postgresql/data # Linux is case sensitive, so table name cases must match!
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: "123"

  # adminer:
  #   image: adminer
  #   container_name: Adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - MySQL
  #     - PostgreSQL

  # phpmyadmin:
  #   image: phpmyadmin
  #   container_name: phpMyAdmin
  #   restart: always
  #   ports:
  #     - "8081:80"
  #   environment:
  #     PMA_HOST: MySQL
  #     PMA_USER: root
  #     PMA_PASSWORD: "123"
  #   depends_on:
  #     - MySQL

volumes:
  mysql-data:
  postgres-data:

    # git:
    #   image: alpine
    #   container_name: Git
    #   build:
    #     context: ./docker/git
    #     dockerfile: Dockerfile
    #   command: tail -F anything
    #   volumes:
    #     - ./app:/app
